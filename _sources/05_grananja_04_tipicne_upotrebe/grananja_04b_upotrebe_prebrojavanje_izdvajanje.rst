Пребројавање, издвајање и претрага
==================================

Пребројавање
------------

Када је потребно пребројати величине које испуњавају неки услов, задатак се најједноставније решава тако што искористимо једну променљиву као бројач. Тој променљивој на почетку доделимо вредност 0, а затим, кад год нађемо величину која испуњава услов, повећамо вредност бројача за 1.

.. questionnote::
    
    **Пример - тест:** 
    
    За полагање теста познавања саобраћајних прописа дозвољено је имати највише 3 негативна поена. Написати програм који учитава број негативних поена за сваког од четворо људи који су полагали тест и исписује број оних који су положили.
    
Као што смо и поменули, увешћемо једну бројачку променљиву (то је променљива *polozili*) и помоћу ње ћемо пребројати колико кандидата је положило тест.

.. activecode:: Grananja_PSPTest
    :passivecode: true
    :coach:
    :includesrc: _src/grananja/Grananja_PSPTest.cs


Издвајање
---------

Нека је међу више величина потребно пронаћи које од њих испуњавају дати услов, односно констатовати да ни једна не испуњава услов ако је то случај. У ову сврху можемо да користимо једну логичку променљиву која прати да ли је услов био бар једном испуњен.

.. questionnote::
    
    **Пример - лепо време (сви градови):** 
    
    Написати програм који редом учитава највише дневне температуре у Београду, Новом Саду и Нишу, а исписује име града и температуру у њему, за сваки град у коме је температура била између 20 и 27 степени (укључујући и границе). Ако ни у једном од ова три града температура није била у датом интервалу, програм треба да испише да није било лепог времена.

.. activecode:: Grananja_LepoVreme
    :passivecode: true
    :coach:
    :includesrc: _src/grananja/Grananja_LepoVreme.cs

Претрага
--------

Понекада величине које испуњавају услов не тражимо да бисмо их све издвојили (и обрадили на неки начин), него само до проналажења прве такве величине.

.. questionnote::
    
    **Пример - лепо време (први град):** 
    
    Написати програм који редом учитава највише дневне температуре у Београду, Новом Саду и Нишу, а исписује име града и температуру у њему за први град по редоследу  података у коме је температура била између 20 и 27 степени (укључујући и границе). Ако ни у једном од ова три града температура није била у датом интервалу, програм треба да испише да није било лепог времена.

Разлика у односу на претходни задатак је што у случају да температура у више градова испуњава услов, не треба исписати све такве градове и температуре већ само први. 

Овај задатак можемо да решимо преправком претходног програма, тако што пооштримо услове за исписивање. Да би подаци о граду и температури били исписани, у овом случају је још потребно и да до тада није пронађена температура која испуњава услов.

.. activecode:: Grananja_LepoVreme2
    :passivecode: true
    :coach:
    :includesrc: _src/grananja/Grananja_LepoVreme2.cs

Задатак можемо да решимо и краће, употребом надовезаних *if* наредби, односно вишеструке *if* наредбе:

.. activecode:: Grananja_LepoVreme3
    :passivecode: true
    :coach:
    :includesrc: _src/grananja/Grananja_LepoVreme3.cs

У задацима који следе проверите да ли умете да пребројите или издвојите елементе мале серије који испуњавају неки услов, односно да пронађете први такав елемент.
